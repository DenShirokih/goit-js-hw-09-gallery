{"version":3,"file":"static/js/main.b83ddbcf.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../webpack/bootstrap","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/load script","../webpack/runtime/make namespace object","../webpack/runtime/publicPath","../webpack/runtime/jsonp chunk loading","js/gallery-items.js","js/util/util.js","js/core/eventable.js","js/slide/placeholder.js","js/slide/content.js","js/core/base.js","js/util/viewport-size.js","js/slide/zoom-level.js","js/slide/loader.js","js/lightbox/lightbox.js","js/gallery.js"],"sourcesContent":["export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + \"5281f3c2\" + \".chunk.js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var inProgress = {};\nvar dataWebpackPrefix = \"react-template:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = function(url, done, key, chunkId) {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = function(prev, event) {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach(function(fn) { return fn(event); });\n\t\tif(prev) return prev(event);\n\t}\n\t;\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/goit-js-hw-09-gallery/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n__webpack_require__.f.j = function(chunkId, promises) {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise(function(resolve, reject) { installedChunkData = installedChunks[chunkId] = [resolve, reject]; });\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = function(event) {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkreact_template\"] = self[\"webpackChunkreact_template\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","export default [\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/14/16/43/himilayan-blue-poppy-4202825__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/14/16/43/himilayan-blue-poppy-4202825_1280.jpg',\n    description: 'Hokkaido Flower',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/14/22/05/container-4203677__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/14/22/05/container-4203677_1280.jpg',\n    description: 'Container Haulage Freight',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/16/09/47/beach-4206785__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/16/09/47/beach-4206785_1280.jpg',\n    description: 'Aerial Beach View',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2016/11/18/16/19/flowers-1835619__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2016/11/18/16/19/flowers-1835619_1280.jpg',\n    description: 'Flower Blooms',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2018/09/13/10/36/mountains-3674334__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2018/09/13/10/36/mountains-3674334_1280.jpg',\n    description: 'Alpine Mountains',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/16/23/04/landscape-4208571__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/16/23/04/landscape-4208571_1280.jpg',\n    description: 'Mountain Lake Sailing',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/17/09/27/the-alps-4209272__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/17/09/27/the-alps-4209272_1280.jpg',\n    description: 'Alpine Spring Meadows',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/16/21/10/landscape-4208255__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/16/21/10/landscape-4208255_1280.jpg',\n    description: 'Nature Landscape',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/17/04/35/lighthouse-4208843__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/17/04/35/lighthouse-4208843_1280.jpg',\n    description: 'Lighthouse Coast Sea',\n  },\n];\n","/** @typedef {import(\"../photoswipe\").Point} Point */\r\n\r\n/** @typedef {undefined | null | false | '' | 0} Falsy */\r\n/** @typedef {keyof HTMLElementTagNameMap} HTMLElementTagName */\r\n\r\n/**\r\n * @template {HTMLElementTagName | Falsy} [T=\"div\"]\r\n * @template {Node | undefined} [NodeToAppendElementTo=undefined]\r\n * @param {string=} className\r\n * @param {T=} [tagName]\r\n * @param {NodeToAppendElementTo=} appendToEl\r\n * @returns {T extends HTMLElementTagName ? HTMLElementTagNameMap[T] : HTMLElementTagNameMap['div']}\r\n */\r\nexport function createElement(className, tagName, appendToEl) {\r\n  const el = document.createElement(tagName || 'div');\r\n  if (className) {\r\n    el.className = className;\r\n  }\r\n  if (appendToEl) {\r\n    appendToEl.appendChild(el);\r\n  }\r\n  // @ts-expect-error\r\n  return el;\r\n}\r\n\r\n/**\r\n * @param {Point} p1\r\n * @param {Point} p2\r\n */\r\nexport function equalizePoints(p1, p2) {\r\n  p1.x = p2.x;\r\n  p1.y = p2.y;\r\n  if (p2.id !== undefined) {\r\n    p1.id = p2.id;\r\n  }\r\n  return p1;\r\n}\r\n\r\n/**\r\n * @param {Point} p\r\n */\r\nexport function roundPoint(p) {\r\n  p.x = Math.round(p.x);\r\n  p.y = Math.round(p.y);\r\n}\r\n\r\n/**\r\n * Returns distance between two points.\r\n *\r\n * @param {Point} p1\r\n * @param {Point} p2\r\n */\r\nexport function getDistanceBetween(p1, p2) {\r\n  const x = Math.abs(p1.x - p2.x);\r\n  const y = Math.abs(p1.y - p2.y);\r\n  return Math.sqrt((x * x) + (y * y));\r\n}\r\n\r\n/**\r\n * Whether X and Y positions of points are qual\r\n *\r\n * @param {Point} p1\r\n * @param {Point} p2\r\n */\r\nexport function pointsEqual(p1, p2) {\r\n  return p1.x === p2.x && p1.y === p2.y;\r\n}\r\n\r\n/**\r\n * The float result between the min and max values.\r\n *\r\n * @param {number} val\r\n * @param {number} min\r\n * @param {number} max\r\n */\r\nexport function clamp(val, min, max) {\r\n  return Math.min(Math.max(val, min), max);\r\n}\r\n\r\n/**\r\n * Get transform string\r\n *\r\n * @param {number} x\r\n * @param {number=} y\r\n * @param {number=} scale\r\n */\r\nexport function toTransformString(x, y, scale) {\r\n  let propValue = 'translate3d('\r\n    + x + 'px,' + (y || 0) + 'px'\r\n    + ',0)';\r\n\r\n  if (scale !== undefined) {\r\n    propValue += ' scale3d('\r\n      + scale + ',' + scale\r\n      + ',1)';\r\n  }\r\n\r\n  return propValue;\r\n}\r\n\r\n/**\r\n * Apply transform:translate(x, y) scale(scale) to element\r\n *\r\n * @param {HTMLElement} el\r\n * @param {number} x\r\n * @param {number=} y\r\n * @param {number=} scale\r\n */\r\nexport function setTransform(el, x, y, scale) {\r\n  el.style.transform = toTransformString(x, y, scale);\r\n}\r\n\r\nconst defaultCSSEasing = 'cubic-bezier(.4,0,.22,1)';\r\n\r\n/**\r\n * Apply CSS transition to element\r\n *\r\n * @param {HTMLElement} el\r\n * @param {string=} prop CSS property to animate\r\n * @param {number=} duration in ms\r\n * @param {string=} ease CSS easing function\r\n */\r\nexport function setTransitionStyle(el, prop, duration, ease) {\r\n  // inOut: 'cubic-bezier(.4, 0, .22, 1)', // for \"toggle state\" transitions\r\n  // out: 'cubic-bezier(0, 0, .22, 1)', // for \"show\" transitions\r\n  // in: 'cubic-bezier(.4, 0, 1, 1)'// for \"hide\" transitions\r\n  el.style.transition = prop\r\n    ? (prop + ' ' + duration + 'ms ' + (ease || defaultCSSEasing))\r\n    : 'none';\r\n}\r\n\r\n/**\r\n * Apply width and height CSS properties to element\r\n *\r\n * @param {HTMLElement} el\r\n * @param {string | number} w\r\n * @param {string | number} h\r\n */\r\nexport function setWidthHeight(el, w, h) {\r\n  el.style.width = (typeof w === 'number') ? (w + 'px') : w;\r\n  el.style.height = (typeof h === 'number') ? (h + 'px') : h;\r\n}\r\n\r\n/**\r\n * @param {HTMLElement} el\r\n */\r\nexport function removeTransitionStyle(el) {\r\n  setTransitionStyle(el);\r\n}\r\n\r\n/**\r\n * @param {HTMLImageElement} img\r\n * @returns {Promise<HTMLImageElement | void>}\r\n */\r\nexport function decodeImage(img) {\r\n  if ('decode' in img) {\r\n    return img.decode();\r\n  }\r\n\r\n  if (img.complete) {\r\n    return Promise.resolve(img);\r\n  }\r\n\r\n  return new Promise((resolve, reject) => {\r\n    img.onload = () => resolve(img);\r\n    img.onerror = reject;\r\n  });\r\n}\r\n\r\n/** @typedef {LOAD_STATE[keyof LOAD_STATE]} LoadState */\r\n/** @type {{ IDLE: 'idle'; LOADING: 'loading'; LOADED: 'loaded'; ERROR: 'error' }} */\r\nexport const LOAD_STATE = {\r\n  IDLE: 'idle',\r\n  LOADING: 'loading',\r\n  LOADED: 'loaded',\r\n  ERROR: 'error',\r\n};\r\n\r\n\r\n/**\r\n * Check if click or keydown event was dispatched\r\n * with a special key or via mouse wheel.\r\n *\r\n * @param {MouseEvent | KeyboardEvent} e\r\n */\r\nexport function specialKeyUsed(e) {\r\n  if (e.which === 2 || e.ctrlKey || e.metaKey || e.altKey || e.shiftKey) {\r\n    return true;\r\n  }\r\n}\r\n\r\n/**\r\n * Parse `gallery` or `children` options.\r\n *\r\n * @param {HTMLElement | NodeListOf<HTMLElement> | string} option\r\n * @param {string=} legacySelector\r\n * @param {HTMLElement | Document} [parent]\r\n * @returns HTMLElement[]\r\n */\r\nexport function getElementsFromOption(option, legacySelector, parent = document) {\r\n  /** @type {HTMLElement[]} */\r\n  let elements = [];\r\n\r\n  if (option instanceof Element) {\r\n    elements = [option];\r\n  } else if (option instanceof NodeList || Array.isArray(option)) {\r\n    elements = Array.from(option);\r\n  } else {\r\n    const selector = typeof option === 'string' ? option : legacySelector;\r\n    if (selector) {\r\n      elements = Array.from(parent.querySelectorAll(selector));\r\n    }\r\n  }\r\n\r\n  return elements;\r\n}\r\n\r\n/**\r\n * Check if variable is PhotoSwipe class\r\n *\r\n * @param {any} fn\r\n */\r\nexport function isPswpClass(fn) {\r\n  return typeof fn === 'function'\r\n    && fn.prototype\r\n    && fn.prototype.goTo;\r\n}\r\n","/** @typedef {import(\"../lightbox/lightbox\").default} PhotoSwipeLightbox */\r\n/** @typedef {import(\"../photoswipe\").default} PhotoSwipe */\r\n/** @typedef {import(\"../photoswipe\").PhotoSwipeOptions} PhotoSwipeOptions */\r\n/** @typedef {import(\"../photoswipe\").DataSource} DataSource */\r\n/** @typedef {import(\"../ui/ui-element\").UIElementData} UIElementData */\r\n/** @typedef {import(\"../slide/content\").default} ContentDefault */\r\n/** @typedef {import(\"../slide/slide\").default} Slide */\r\n/** @typedef {import(\"../slide/slide\").SlideData} SlideData */\r\n/** @typedef {import(\"../slide/zoom-level\").default} ZoomLevel */\r\n/** @typedef {import(\"../slide/get-thumb-bounds\").Bounds} Bounds */\r\n\r\n/**\r\n * Allow adding an arbitrary props to the Content\r\n * https://photoswipe.com/custom-content/#using-webp-image-format\r\n * @typedef {ContentDefault & Record<string, any>} Content\r\n */\r\n/** @typedef {{ x?: number; y?: number }} Point */\r\n\r\n/**\r\n * @typedef {Object} PhotoSwipeEventsMap https://photoswipe.com/events/\r\n *\r\n *\r\n * https://photoswipe.com/adding-ui-elements/\r\n *\r\n * @prop {undefined} uiRegister\r\n * @prop {{ data: UIElementData }} uiElementCreate\r\n *\r\n *\r\n * https://photoswipe.com/events/#initialization-events\r\n *\r\n * @prop {undefined} beforeOpen\r\n * @prop {undefined} firstUpdate\r\n * @prop {undefined} initialLayout\r\n * @prop {undefined} change\r\n * @prop {undefined} afterInit\r\n * @prop {undefined} bindEvents\r\n *\r\n *\r\n * https://photoswipe.com/events/#opening-or-closing-transition-events\r\n *\r\n * @prop {undefined} openingAnimationStart\r\n * @prop {undefined} openingAnimationEnd\r\n * @prop {undefined} closingAnimationStart\r\n * @prop {undefined} closingAnimationEnd\r\n *\r\n *\r\n * https://photoswipe.com/events/#closing-events\r\n *\r\n * @prop {undefined} close\r\n * @prop {undefined} destroy\r\n *\r\n *\r\n * https://photoswipe.com/events/#pointer-and-gesture-events\r\n *\r\n * @prop {{ originalEvent: PointerEvent }} pointerDown\r\n * @prop {{ originalEvent: PointerEvent }} pointerMove\r\n * @prop {{ originalEvent: PointerEvent }} pointerUp\r\n * @prop {{ bgOpacity: number }} pinchClose can be default prevented\r\n * @prop {{ panY: number }} verticalDrag can be default prevented\r\n *\r\n *\r\n * https://photoswipe.com/events/#slide-content-events\r\n *\r\n * @prop {{ content: Content }} contentInit\r\n * @prop {{ content: Content; isLazy: boolean }} contentLoad can be default prevented\r\n * @prop {{ content: Content; isLazy: boolean }} contentLoadImage can be default prevented\r\n * @prop {{ content: Content; slide: Slide; isError?: boolean }} loadComplete\r\n * @prop {{ content: Content; slide: Slide }} loadError\r\n * @prop {{ content: Content; width: number; height: number }} contentResize can be default prevented\r\n * @prop {{ content: Content; width: number; height: number; slide: Slide }} imageSizeChange\r\n * @prop {{ content: Content }} contentLazyLoad can be default prevented\r\n * @prop {{ content: Content }} contentAppend can be default prevented\r\n * @prop {{ content: Content }} contentActivate can be default prevented\r\n * @prop {{ content: Content }} contentDeactivate can be default prevented\r\n * @prop {{ content: Content }} contentRemove can be default prevented\r\n * @prop {{ content: Content }} contentDestroy can be default prevented\r\n *\r\n *\r\n * undocumented\r\n *\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} imageClickAction can be default prevented\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} bgClickAction can be default prevented\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} tapAction can be default prevented\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} doubleTapAction can be default prevented\r\n *\r\n * @prop {{ originalEvent: KeyboardEvent }} keydown can be default prevented\r\n * @prop {{ x: number; dragging: boolean }} moveMainScroll\r\n * @prop {{ slide: Slide }} firstZoomPan\r\n * @prop {{ slide: Slide, data: SlideData, index: number }} gettingData\r\n * @prop {undefined} beforeResize\r\n * @prop {undefined} resize\r\n * @prop {undefined} viewportSize\r\n * @prop {undefined} updateScrollOffset\r\n * @prop {{ slide: Slide }} slideInit\r\n * @prop {{ slide: Slide }} afterSetContent\r\n * @prop {{ slide: Slide }} slideLoad\r\n * @prop {{ slide: Slide }} appendHeavy can be default prevented\r\n * @prop {{ slide: Slide }} appendHeavyContent\r\n * @prop {{ slide: Slide }} slideActivate\r\n * @prop {{ slide: Slide }} slideDeactivate\r\n * @prop {{ slide: Slide }} slideDestroy\r\n * @prop {{ destZoomLevel: number, centerPoint: Point, transitionDuration: number | false }} beforeZoomTo\r\n * @prop {{ slide: Slide }} zoomPanUpdate\r\n * @prop {{ slide: Slide }} initialZoomPan\r\n * @prop {{ slide: Slide }} calcSlideSize\r\n * @prop {undefined} resolutionChanged\r\n * @prop {{ originalEvent: WheelEvent }} wheel can be default prevented\r\n * @prop {{ content: Content }} contentAppendImage can be default prevented\r\n * @prop {{ index: number; itemData: SlideData }} lazyLoadSlide can be default prevented\r\n * @prop {undefined} lazyLoad\r\n * @prop {{ slide: Slide }} calcBounds\r\n * @prop {{ zoomLevels: ZoomLevel, slideData: SlideData }} zoomLevelsUpdate\r\n *\r\n *\r\n * legacy\r\n *\r\n * @prop {undefined} init\r\n * @prop {undefined} initialZoomIn\r\n * @prop {undefined} initialZoomOut\r\n * @prop {undefined} initialZoomInEnd\r\n * @prop {undefined} initialZoomOutEnd\r\n * @prop {{ dataSource: DataSource, numItems: number }} numItems\r\n * @prop {{ itemData: SlideData; index: number }} itemData\r\n * @prop {{ index: number, itemData: SlideData, instance: PhotoSwipe }} thumbBounds\r\n */\r\n\r\n/**\r\n * @typedef {Object} PhotoSwipeFiltersMap https://photoswipe.com/filters/\r\n *\r\n * @prop {(numItems: number, dataSource: DataSource) => number} numItems\r\n * Modify the total amount of slides. Example on Data sources page.\r\n * https://photoswipe.com/filters/#numitems\r\n *\r\n * @prop {(itemData: SlideData, index: number) => SlideData} itemData\r\n * Modify slide item data. Example on Data sources page.\r\n * https://photoswipe.com/filters/#itemdata\r\n *\r\n * @prop {(itemData: SlideData, element: HTMLElement, linkEl: HTMLAnchorElement) => SlideData} domItemData\r\n * Modify item data when it's parsed from DOM element. Example on Data sources page.\r\n * https://photoswipe.com/filters/#domitemdata\r\n *\r\n * @prop {(clickedIndex: number, e: MouseEvent, instance: PhotoSwipeLightbox) => number} clickedIndex\r\n * Modify clicked gallery item index.\r\n * https://photoswipe.com/filters/#clickedindex\r\n *\r\n * @prop {(placeholderSrc: string | false, content: Content) => string | false} placeholderSrc\r\n * Modify placeholder image source.\r\n * https://photoswipe.com/filters/#placeholdersrc\r\n *\r\n * @prop {(isContentLoading: boolean, content: Content) => boolean} isContentLoading\r\n * Modify if the content is currently loading.\r\n * https://photoswipe.com/filters/#iscontentloading\r\n *\r\n * @prop {(isContentZoomable: boolean, content: Content) => boolean} isContentZoomable\r\n * Modify if the content can be zoomed.\r\n * https://photoswipe.com/filters/#iscontentzoomable\r\n *\r\n * @prop {(useContentPlaceholder: boolean, content: Content) => boolean} useContentPlaceholder\r\n * Modify if the placeholder should be used for the content.\r\n * https://photoswipe.com/filters/#usecontentplaceholder\r\n *\r\n * @prop {(isKeepingPlaceholder: boolean, content: Content) => boolean} isKeepingPlaceholder\r\n * Modify if the placeholder should be kept after the content is loaded.\r\n * https://photoswipe.com/filters/#iskeepingplaceholder\r\n *\r\n *\r\n * @prop {(contentErrorElement: HTMLElement, content: Content) => HTMLElement} contentErrorElement\r\n * Modify an element when the content has error state (for example, if image cannot be loaded).\r\n * https://photoswipe.com/filters/#contenterrorelement\r\n *\r\n * @prop {(element: HTMLElement, data: UIElementData) => HTMLElement} uiElement\r\n * Modify a UI element that's being created.\r\n * https://photoswipe.com/filters/#uielement\r\n *\r\n * @prop {(thumbnail: HTMLElement, itemData: SlideData, index: number) => HTMLElement} thumbEl\r\n * Modify the thubmnail element from which opening zoom animation starts or ends.\r\n * https://photoswipe.com/filters/#thumbel\r\n *\r\n * @prop {(thumbBounds: Bounds, itemData: SlideData, index: number) => Bounds} thumbBounds\r\n * Modify the thubmnail bounds from which opening zoom animation starts or ends.\r\n * https://photoswipe.com/filters/#thumbbounds\r\n */\r\n\r\n/**\r\n * @template {keyof PhotoSwipeFiltersMap} T\r\n * @typedef {{ fn: PhotoSwipeFiltersMap[T], priority: number }} Filter<T>\r\n */\r\n\r\n/**\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n * @typedef {PhotoSwipeEventsMap[T] extends undefined ? PhotoSwipeEvent<T> : PhotoSwipeEvent<T> & PhotoSwipeEventsMap[T]} AugmentedEvent\r\n */\r\n\r\n/**\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n * @typedef {(event: AugmentedEvent<T>) => void} EventCallback<T>\r\n */\r\n\r\n/**\r\n * Base PhotoSwipe event object\r\n *\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n */\r\nclass PhotoSwipeEvent {\r\n  /**\r\n   * @param {T} type\r\n   * @param {PhotoSwipeEventsMap[T]} [details]\r\n   */\r\n  constructor(type, details) {\r\n    this.type = type;\r\n    if (details) {\r\n      Object.assign(this, details);\r\n    }\r\n  }\r\n\r\n  preventDefault() {\r\n    this.defaultPrevented = true;\r\n  }\r\n}\r\n\r\n/**\r\n * PhotoSwipe base class that can listen and dispatch for events.\r\n * Shared by PhotoSwipe Core and PhotoSwipe Lightbox, extended by base.js\r\n */\r\nclass Eventable {\r\n  constructor() {\r\n    /**\r\n     * @type {{ [T in keyof PhotoSwipeEventsMap]?: ((event: AugmentedEvent<T>) => void)[] }}\r\n     */\r\n    this._listeners = {};\r\n\r\n    /**\r\n     * @type {{ [T in keyof PhotoSwipeFiltersMap]?: Filter<T>[] }}\r\n     */\r\n    this._filters = {};\r\n\r\n    /** @type {PhotoSwipe=} */\r\n    this.pswp = undefined;\r\n\r\n    /** @type {PhotoSwipeOptions} */\r\n    this.options = undefined;\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeFiltersMap} T\r\n   * @param {T} name\r\n   * @param {PhotoSwipeFiltersMap[T]} fn\r\n   * @param {number} priority\r\n   */\r\n  addFilter(name, fn, priority = 100) {\r\n    if (!this._filters[name]) {\r\n      this._filters[name] = [];\r\n    }\r\n\r\n    this._filters[name].push({ fn, priority });\r\n    this._filters[name].sort((f1, f2) => f1.priority - f2.priority);\r\n\r\n    if (this.pswp) {\r\n      this.pswp.addFilter(name, fn, priority);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeFiltersMap} T\r\n   * @param {T} name\r\n   * @param {PhotoSwipeFiltersMap[T]} fn\r\n   */\r\n  removeFilter(name, fn) {\r\n    if (this._filters[name]) {\r\n      // @ts-expect-error\r\n      this._filters[name] = this._filters[name].filter(filter => (filter.fn !== fn));\r\n    }\r\n\r\n    if (this.pswp) {\r\n      this.pswp.removeFilter(name, fn);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeFiltersMap} T\r\n   * @param {T} name\r\n   * @param {Parameters<PhotoSwipeFiltersMap[T]>} args\r\n   * @returns {Parameters<PhotoSwipeFiltersMap[T]>[0]}\r\n   */\r\n  applyFilters(name, ...args) {\r\n    if (this._filters[name]) {\r\n      this._filters[name].forEach((filter) => {\r\n        // @ts-expect-error\r\n        args[0] = filter.fn.apply(this, args);\r\n      });\r\n    }\r\n    return args[0];\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeEventsMap} T\r\n   * @param {T} name\r\n   * @param {EventCallback<T>} fn\r\n   */\r\n  on(name, fn) {\r\n    if (!this._listeners[name]) {\r\n      this._listeners[name] = [];\r\n    }\r\n    this._listeners[name].push(fn);\r\n\r\n    // When binding events to lightbox,\r\n    // also bind events to PhotoSwipe Core,\r\n    // if it's open.\r\n    if (this.pswp) {\r\n      this.pswp.on(name, fn);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeEventsMap} T\r\n   * @param {T} name\r\n   * @param {EventCallback<T>} fn\r\n   */\r\n  off(name, fn) {\r\n    if (this._listeners[name]) {\r\n      // @ts-expect-error\r\n      this._listeners[name] = this._listeners[name].filter(listener => (fn !== listener));\r\n    }\r\n\r\n    if (this.pswp) {\r\n      this.pswp.off(name, fn);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeEventsMap} T\r\n   * @param {T} name\r\n   * @param {PhotoSwipeEventsMap[T]} [details]\r\n   * @returns {AugmentedEvent<T>}\r\n   */\r\n  dispatch(name, details) {\r\n    if (this.pswp) {\r\n      return this.pswp.dispatch(name, details);\r\n    }\r\n\r\n    const event = /** @type {AugmentedEvent<T>} */ (new PhotoSwipeEvent(name, details));\r\n\r\n    if (!this._listeners) {\r\n      return event;\r\n    }\r\n\r\n    if (this._listeners[name]) {\r\n      this._listeners[name].forEach((listener) => {\r\n        listener.call(this, event);\r\n      });\r\n    }\r\n\r\n    return event;\r\n  }\r\n}\r\n\r\nexport default Eventable;\r\n","import { createElement, setWidthHeight, toTransformString } from '../util/util.js';\r\n\r\nclass Placeholder {\r\n  /**\r\n   * @param {string | false} imageSrc\r\n   * @param {HTMLElement} container\r\n   */\r\n  constructor(imageSrc, container) {\r\n    // Create placeholder\r\n    // (stretched thumbnail or simple div behind the main image)\r\n    this.element = createElement(\r\n      'pswp__img pswp__img--placeholder',\r\n      imageSrc ? 'img' : '',\r\n      container\r\n    );\r\n\r\n    if (imageSrc) {\r\n      /** @type {HTMLImageElement} */\r\n      (this.element).decoding = 'async';\r\n      /** @type {HTMLImageElement} */\r\n      (this.element).alt = '';\r\n      /** @type {HTMLImageElement} */\r\n      (this.element).src = imageSrc;\r\n      this.element.setAttribute('role', 'presentation');\r\n    }\r\n\r\n    this.element.setAttribute('aria-hiden', 'true');\r\n  }\r\n\r\n  /**\r\n   * @param {number} width\r\n   * @param {number} height\r\n   */\r\n  setDisplayedSize(width, height) {\r\n    if (!this.element) {\r\n      return;\r\n    }\r\n\r\n    if (this.element.tagName === 'IMG') {\r\n      // Use transform scale() to modify img placeholder size\r\n      // (instead of changing width/height directly).\r\n      // This helps with performance, specifically in iOS15 Safari.\r\n      setWidthHeight(this.element, 250, 'auto');\r\n      this.element.style.transformOrigin = '0 0';\r\n      this.element.style.transform = toTransformString(0, 0, width / 250);\r\n    } else {\r\n      setWidthHeight(this.element, width, height);\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    if (this.element.parentNode) {\r\n      this.element.remove();\r\n    }\r\n    this.element = null;\r\n  }\r\n}\r\n\r\nexport default Placeholder;\r\n","import { createElement, LOAD_STATE, setWidthHeight } from '../util/util.js';\r\nimport Placeholder from './placeholder.js';\r\n\r\n/** @typedef {import(\"./slide\").default} Slide */\r\n/** @typedef {import(\"./slide\").SlideData} SlideData */\r\n/** @typedef {import(\"../photoswipe\").default} PhotoSwipe */\r\n/** @typedef {import(\"../util/util\").LoadState} LoadState */\r\n\r\nclass Content {\r\n  /**\r\n   * @param {SlideData} itemData Slide data\r\n   * @param {PhotoSwipe} instance PhotoSwipe or PhotoSwipeLightbox instance\r\n   * @param {number} index\r\n   */\r\n  constructor(itemData, instance, index) {\r\n    this.instance = instance;\r\n    this.data = itemData;\r\n    this.index = index;\r\n\r\n    /** @type {HTMLImageElement | HTMLDivElement} */\r\n    this.element = undefined;\r\n\r\n    this.width = Number(this.data.w) || Number(this.data.width) || 0;\r\n    this.height = Number(this.data.h) || Number(this.data.height) || 0;\r\n\r\n    this.isAttached = false;\r\n    this.hasSlide = false;\r\n    /** @type {LoadState} */\r\n    this.state = LOAD_STATE.IDLE;\r\n\r\n    if (this.data.type) {\r\n      this.type = this.data.type;\r\n    } else if (this.data.src) {\r\n      this.type = 'image';\r\n    } else {\r\n      this.type = 'html';\r\n    }\r\n\r\n    this.instance.dispatch('contentInit', { content: this });\r\n  }\r\n\r\n  removePlaceholder() {\r\n    if (this.placeholder && !this.keepPlaceholder()) {\r\n      // With delay, as image might be loaded, but not rendered\r\n      setTimeout(() => {\r\n        if (this.placeholder) {\r\n          this.placeholder.destroy();\r\n          this.placeholder = null;\r\n        }\r\n      }, 500);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Preload content\r\n   *\r\n   * @param {boolean=} isLazy\r\n   * @param {boolean=} reload\r\n   */\r\n  load(isLazy, reload) {\r\n    if (!this.placeholder && this.slide && this.usePlaceholder()) {\r\n      // use   -based placeholder only for the first slide,\r\n      // as rendering (even small stretched thumbnail) is an expensive operation\r\n      const placeholderSrc = this.instance.applyFilters(\r\n        'placeholderSrc',\r\n        (this.data.msrc && this.slide.isFirstSlide) ? this.data.msrc : false,\r\n        this\r\n      );\r\n      this.placeholder = new Placeholder(\r\n        placeholderSrc,\r\n        this.slide.container\r\n      );\r\n    }\r\n\r\n    if (this.element && !reload) {\r\n      return;\r\n    }\r\n\r\n    if (this.instance.dispatch('contentLoad', { content: this, isLazy }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (this.isImageContent()) {\r\n      this.loadImage(isLazy);\r\n    } else {\r\n      this.element = createElement('pswp__content');\r\n      this.element.innerHTML = this.data.html || '';\r\n    }\r\n\r\n    if (reload && this.slide) {\r\n      this.slide.updateContentSize(true);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Preload image\r\n   *\r\n   * @param {boolean} isLazy\r\n   */\r\n  loadImage(isLazy) {\r\n    const imageElement = createElement('pswp__img', 'img');\r\n    this.element = imageElement;\r\n\r\n    if (this.instance.dispatch('contentLoadImage', { content: this, isLazy }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (this.data.srcset) {\r\n      imageElement.srcset = this.data.srcset;\r\n    }\r\n\r\n    imageElement.src = this.data.src;\r\n\r\n    imageElement.alt = this.data.alt || '';\r\n\r\n    this.state = LOAD_STATE.LOADING;\r\n\r\n    if (imageElement.complete) {\r\n      this.onLoaded();\r\n    } else {\r\n      imageElement.onload = () => {\r\n        this.onLoaded();\r\n      };\r\n\r\n      imageElement.onerror = () => {\r\n        this.onError();\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Assign slide to content\r\n   *\r\n   * @param {Slide} slide\r\n   */\r\n  setSlide(slide) {\r\n    this.slide = slide;\r\n    this.hasSlide = true;\r\n    this.instance = slide.pswp;\r\n\r\n    // todo: do we need to unset slide?\r\n  }\r\n\r\n  /**\r\n   * Content load success handler\r\n   */\r\n  onLoaded() {\r\n    this.state = LOAD_STATE.LOADED;\r\n\r\n    if (this.slide) {\r\n      this.instance.dispatch('loadComplete', { slide: this.slide, content: this });\r\n\r\n      // if content is reloaded\r\n      if (this.slide.isActive\r\n          && this.slide.heavyAppended\r\n          && !this.element.parentNode) {\r\n        this.slide.container.innerHTML = '';\r\n        this.append();\r\n        this.slide.updateContentSize(true);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Content load error handler\r\n   */\r\n  onError() {\r\n    this.state = LOAD_STATE.ERROR;\r\n\r\n    if (this.slide) {\r\n      this.displayError();\r\n      this.instance.dispatch('loadComplete', { slide: this.slide, isError: true, content: this });\r\n      this.instance.dispatch('loadError', { slide: this.slide, content: this });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns {Boolean} If the content is currently loading\r\n   */\r\n  isLoading() {\r\n    return this.instance.applyFilters(\r\n      'isContentLoading',\r\n      this.state === LOAD_STATE.LOADING,\r\n      this\r\n    );\r\n  }\r\n\r\n  isError() {\r\n    return this.state === LOAD_STATE.ERROR;\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean} If the content is image\r\n   */\r\n  isImageContent() {\r\n    return this.type === 'image';\r\n  }\r\n\r\n  /**\r\n   * Update content size\r\n   *\r\n   * @param {Number} width\r\n   * @param {Number} height\r\n   */\r\n  setDisplayedSize(width, height) {\r\n    if (!this.element) {\r\n      return;\r\n    }\r\n\r\n    if (this.placeholder) {\r\n      this.placeholder.setDisplayedSize(width, height);\r\n    }\r\n\r\n    // eslint-disable-next-line max-len\r\n    if (this.instance.dispatch('contentResize', { content: this, width, height }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    setWidthHeight(this.element, width, height);\r\n\r\n    if (this.isImageContent() && !this.isError()) {\r\n      const image = /** @type HTMLImageElement */ (this.element);\r\n\r\n      // Handle srcset sizes attribute.\r\n      //\r\n      // Never lower quality, if it was increased previously.\r\n      // Chrome does this automatically, Firefox and Safari do not,\r\n      // so we store largest used size in dataset.\r\n      if (image.srcset\r\n          // eslint-disable-next-line max-len\r\n          && (!image.dataset.largestUsedSize || width > parseInt(image.dataset.largestUsedSize, 10))) {\r\n        image.sizes = width + 'px';\r\n        image.dataset.largestUsedSize = String(width);\r\n      }\r\n\r\n      if (this.slide) {\r\n        // eslint-disable-next-line max-len\r\n        this.instance.dispatch('imageSizeChange', { slide: this.slide, width, height, content: this });\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean} If the content can be zoomed\r\n   */\r\n  isZoomable() {\r\n    return this.instance.applyFilters(\r\n      'isContentZoomable',\r\n      this.isImageContent() && (this.state !== LOAD_STATE.ERROR),\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean} If content should use a placeholder (from msrc by default)\r\n   */\r\n  usePlaceholder() {\r\n    return this.instance.applyFilters(\r\n      'useContentPlaceholder',\r\n      this.isImageContent(),\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Preload content with lazy-loading param\r\n   */\r\n  lazyLoad() {\r\n    if (this.instance.dispatch('contentLazyLoad', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    this.load(true);\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean} If placeholder should be kept after content is loaded\r\n   */\r\n  keepPlaceholder() {\r\n    return this.instance.applyFilters(\r\n      'isKeepingPlaceholder',\r\n      this.isLoading(),\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Destroy the content\r\n   */\r\n  destroy() {\r\n    this.hasSlide = false;\r\n    this.slide = null;\r\n\r\n    if (this.instance.dispatch('contentDestroy', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    this.remove();\r\n\r\n    if (this.isImageContent() && this.element) {\r\n      this.element.onload = null;\r\n      this.element.onerror = null;\r\n      this.element = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Display error message\r\n   */\r\n  displayError() {\r\n    if (this.slide) {\r\n      /** @type {HTMLElement} */\r\n      let errorMsgEl = createElement('pswp__error-msg');\r\n      errorMsgEl.innerText = this.instance.options.errorMsg;\r\n      errorMsgEl = this.instance.applyFilters(\r\n        'contentErrorElement',\r\n        errorMsgEl,\r\n        this\r\n      );\r\n      this.element = createElement('pswp__content pswp__error-msg-container');\r\n      this.element.appendChild(errorMsgEl);\r\n      this.slide.container.innerHTML = '';\r\n      this.slide.container.appendChild(this.element);\r\n      this.slide.updateContentSize(true);\r\n      this.removePlaceholder();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Append the content\r\n   */\r\n  append() {\r\n    this.isAttached = true;\r\n\r\n    if (this.state === LOAD_STATE.ERROR) {\r\n      this.displayError();\r\n      return;\r\n    }\r\n\r\n    if (this.instance.dispatch('contentAppend', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (this.isImageContent()) {\r\n      // Use decode() on nearby slides\r\n      //\r\n      // Nearby slide images are in DOM and not hidden via display:none.\r\n      // However, they are placed offscreen (to the left and right side).\r\n      //\r\n      // Some browsers do not composite the image until it's actually visible,\r\n      // using decode() helps.\r\n      //\r\n      // You might ask \"why dont you just decode() and then append all images\",\r\n      // that's because I want to show image before it's fully loaded,\r\n      // as browser can render parts of image while it is loading.\r\n      if (this.slide\r\n          && !this.slide.isActive\r\n          && ('decode' in this.element)) {\r\n        this.isDecoding = true;\r\n        // Make sure that we start decoding on the next frame\r\n        requestAnimationFrame(() => {\r\n          // element might change\r\n          if (this.element && this.element.tagName === 'IMG') {\r\n            /** @type {HTMLImageElement} */\r\n            (this.element).decode().then(() => {\r\n              this.isDecoding = false;\r\n              requestAnimationFrame(() => {\r\n                this.appendImage();\r\n              });\r\n            }).catch(() => {\r\n              this.isDecoding = false;\r\n            });\r\n          }\r\n        });\r\n      } else {\r\n        if (this.placeholder\r\n          // eslint-disable-next-line max-len\r\n          && (this.state === LOAD_STATE.LOADED || /** @type {LoadState} */ (this.state) === LOAD_STATE.ERROR)\r\n        ) {\r\n          this.removePlaceholder();\r\n        }\r\n        this.appendImage();\r\n      }\r\n    } else if (this.element && !this.element.parentNode) {\r\n      this.slide.container.appendChild(this.element);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Activate the slide,\r\n   * active slide is generally the current one,\r\n   * meaning the user can see it.\r\n   */\r\n  activate() {\r\n    if (this.instance.dispatch('contentActivate', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (this.slide) {\r\n      if (this.isImageContent() && this.isDecoding) {\r\n        // add image to slide when it becomes active,\r\n        // even if it's not finished decoding\r\n        this.appendImage();\r\n      } else if (this.isError()) {\r\n        this.load(false, true); // try to reload\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Deactivate the content\r\n   */\r\n  deactivate() {\r\n    this.instance.dispatch('contentDeactivate', { content: this });\r\n  }\r\n\r\n\r\n  /**\r\n   * Remove the content from DOM\r\n   */\r\n  remove() {\r\n    this.isAttached = false;\r\n\r\n    if (this.instance.dispatch('contentRemove', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (this.element && this.element.parentNode) {\r\n      this.element.remove();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Append the image content to slide container\r\n   */\r\n  appendImage() {\r\n    if (!this.isAttached) {\r\n      return;\r\n    }\r\n\r\n    if (this.instance.dispatch('contentAppendImage', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    // ensure that element exists and is not already appended\r\n    if (this.slide && this.element && !this.element.parentNode) {\r\n      this.slide.container.appendChild(this.element);\r\n\r\n      if (this.placeholder\r\n        && (this.state === LOAD_STATE.LOADED || this.state === LOAD_STATE.ERROR)) {\r\n        this.removePlaceholder();\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default Content;\r\n","import Eventable from './eventable';\r\nimport {\r\n  getElementsFromOption\r\n} from '../util/util.js';\r\nimport Content from '../slide/content';\r\n\r\n/** @typedef {import(\"../photoswipe\").default} PhotoSwipe */\r\n/** @typedef {import(\"../photoswipe\").PhotoSwipeOptions} PhotoSwipeOptions */\r\n/** @typedef {import(\"../slide/slide\").SlideData} SlideData */\r\n\r\n/**\r\n * PhotoSwipe base class that can retrieve data about every slide.\r\n * Shared by PhotoSwipe Core and PhotoSwipe Lightbox\r\n */\r\nclass PhotoSwipeBase extends Eventable {\r\n  /**\r\n   * Get total number of slides\r\n   *\r\n   * @returns {number}\r\n   */\r\n  getNumItems() {\r\n    let numItems;\r\n    const { dataSource } = this.options;\r\n    if (!dataSource) {\r\n      numItems = 0;\r\n    } else if ('length' in dataSource) {\r\n      // may be an array or just object with length property\r\n      numItems = dataSource.length;\r\n    } else if ('gallery' in dataSource) {\r\n      // query DOM elements\r\n      if (!dataSource.items) {\r\n        dataSource.items = this._getGalleryDOMElements(dataSource.gallery);\r\n      }\r\n\r\n      if (dataSource.items) {\r\n        numItems = dataSource.items.length;\r\n      }\r\n    }\r\n\r\n    // legacy event, before filters were introduced\r\n    const event = this.dispatch('numItems', {\r\n      dataSource,\r\n      numItems\r\n    });\r\n    return this.applyFilters('numItems', event.numItems, dataSource);\r\n  }\r\n\r\n  /**\r\n   * @param {SlideData} slideData\r\n   * @param {number} index\r\n   */\r\n  createContentFromData(slideData, index) {\r\n    // @ts-expect-error\r\n    return new Content(slideData, this, index);\r\n  }\r\n\r\n  /**\r\n   * Get item data by index.\r\n   *\r\n   * \"item data\" should contain normalized information that PhotoSwipe needs to generate a slide.\r\n   * For example, it may contain properties like\r\n   * `src`, `srcset`, `w`, `h`, which will be used to generate a slide with image.\r\n   *\r\n   * @param {number} index\r\n   */\r\n  getItemData(index) {\r\n    const { dataSource } = this.options;\r\n    let dataSourceItem;\r\n    if (Array.isArray(dataSource)) {\r\n      // Datasource is an array of elements\r\n      dataSourceItem = dataSource[index];\r\n    } else if (dataSource && dataSource.gallery) {\r\n      // dataSource has gallery property,\r\n      // thus it was created by Lightbox, based on\r\n      // gallery and children options\r\n\r\n      // query DOM elements\r\n      if (!dataSource.items) {\r\n        dataSource.items = this._getGalleryDOMElements(dataSource.gallery);\r\n      }\r\n\r\n      dataSourceItem = dataSource.items[index];\r\n    }\r\n\r\n    let itemData = dataSourceItem;\r\n\r\n    if (itemData instanceof Element) {\r\n      itemData = this._domElementToItemData(itemData);\r\n    }\r\n\r\n    // Dispatching the itemData event,\r\n    // it's a legacy verion before filters were introduced\r\n    const event = this.dispatch('itemData', {\r\n      itemData: itemData || {},\r\n      index\r\n    });\r\n\r\n    return this.applyFilters('itemData', event.itemData, index);\r\n  }\r\n\r\n  /**\r\n   * Get array of gallery DOM elements,\r\n   * based on childSelector and gallery element.\r\n   *\r\n   * @param {HTMLElement} galleryElement\r\n   */\r\n  _getGalleryDOMElements(galleryElement) {\r\n    if (this.options.children || this.options.childSelector) {\r\n      return getElementsFromOption(\r\n        this.options.children,\r\n        this.options.childSelector,\r\n        galleryElement\r\n      ) || [];\r\n    }\r\n\r\n    return [galleryElement];\r\n  }\r\n\r\n  /**\r\n   * Converts DOM element to item data object.\r\n   *\r\n   * @param {HTMLElement} element DOM element\r\n   */\r\n  // eslint-disable-next-line class-methods-use-this\r\n  _domElementToItemData(element) {\r\n    /** @type {SlideData} */\r\n    const itemData = {\r\n      element\r\n    };\r\n\r\n    // eslint-disable-next-line max-len\r\n    const linkEl = /** @type {HTMLAnchorElement} */ (element.tagName === 'A' ? element : element.querySelector('a'));\r\n\r\n    if (linkEl) {\r\n      // src comes from data-pswp-src attribute,\r\n      // if it's empty link href is used\r\n      itemData.src = linkEl.dataset.pswpSrc || linkEl.href;\r\n\r\n      if (linkEl.dataset.pswpSrcset) {\r\n        itemData.srcset = linkEl.dataset.pswpSrcset;\r\n      }\r\n\r\n      itemData.width = parseInt(linkEl.dataset.pswpWidth, 10);\r\n      itemData.height = parseInt(linkEl.dataset.pswpHeight, 10);\r\n\r\n      // support legacy w & h properties\r\n      itemData.w = itemData.width;\r\n      itemData.h = itemData.height;\r\n\r\n      if (linkEl.dataset.pswpType) {\r\n        itemData.type = linkEl.dataset.pswpType;\r\n      }\r\n\r\n      const thumbnailEl = element.querySelector('img');\r\n\r\n      if (thumbnailEl) {\r\n        // msrc is URL to placeholder image that's displayed before large image is loaded\r\n        // by default it's displayed only for the first slide\r\n        itemData.msrc = thumbnailEl.currentSrc || thumbnailEl.src;\r\n        itemData.alt = thumbnailEl.getAttribute('alt');\r\n      }\r\n\r\n      if (linkEl.dataset.pswpCropped || linkEl.dataset.cropped) {\r\n        itemData.thumbCropped = true;\r\n      }\r\n    }\r\n\r\n    return this.applyFilters('domItemData', itemData, element, linkEl);\r\n  }\r\n}\r\n\r\nexport default PhotoSwipeBase;\r\n","/** @typedef {import(\"../photoswipe\").PhotoSwipeOptions} PhotoSwipeOptions */\r\n/** @typedef {import(\"../photoswipe\").default} PhotoSwipe */\r\n/** @typedef {import(\"../slide/slide\").SlideData} SlideData */\r\n\r\n/**\r\n * @param {PhotoSwipeOptions} options\r\n * @param {PhotoSwipe} pswp\r\n */\r\nexport function getViewportSize(options, pswp) {\r\n  if (options.getViewportSizeFn) {\r\n    const newViewportSize = options.getViewportSizeFn(options, pswp);\r\n    if (newViewportSize) {\r\n      return newViewportSize;\r\n    }\r\n  }\r\n\r\n  return {\r\n    x: document.documentElement.clientWidth,\r\n\r\n    // TODO: height on mobile is very incosistent due to toolbar\r\n    // find a way to improve this\r\n    //\r\n    // document.documentElement.clientHeight - doesn't seem to work well\r\n    y: window.innerHeight\r\n  };\r\n}\r\n\r\n/**\r\n * Parses padding option.\r\n * Supported formats:\r\n *\r\n * // Object\r\n * padding: {\r\n *  top: 0,\r\n *  bottom: 0,\r\n *  left: 0,\r\n *  right: 0\r\n * }\r\n *\r\n * // A function that returns the object\r\n * paddingFn: (viewportSize, itemData, index) => {\r\n *  return {\r\n *    top: 0,\r\n *    bottom: 0,\r\n *    left: 0,\r\n *    right: 0\r\n *  };\r\n * }\r\n *\r\n * // Legacy variant\r\n * paddingLeft: 0,\r\n * paddingRight: 0,\r\n * paddingTop: 0,\r\n * paddingBottom: 0,\r\n *\r\n * @param {'left' | 'top' | 'bottom' | 'right'} prop\r\n * @param {PhotoSwipeOptions} options PhotoSwipe options\r\n * @param {{ x?: number; y?: number }} viewportSize PhotoSwipe viewport size, for example: { x:800, y:600 }\r\n * @param {SlideData} itemData Data about the slide\r\n * @param {number} index Slide index\r\n * @returns {number}\r\n */\r\nexport function parsePaddingOption(prop, options, viewportSize, itemData, index) {\r\n  /** @type {number} */\r\n  let paddingValue;\r\n\r\n  if (options.paddingFn) {\r\n    paddingValue = options.paddingFn(viewportSize, itemData, index)[prop];\r\n  } else if (options.padding) {\r\n    paddingValue = options.padding[prop];\r\n  } else {\r\n    const legacyPropName = 'padding' + prop[0].toUpperCase() + prop.slice(1);\r\n    // @ts-expect-error\r\n    if (options[legacyPropName]) {\r\n      // @ts-expect-error\r\n      paddingValue = options[legacyPropName];\r\n    }\r\n  }\r\n\r\n  return paddingValue || 0;\r\n}\r\n\r\n/**\r\n * @param {PhotoSwipeOptions} options\r\n * @param {{ x?: number; y?: number }} viewportSize\r\n * @param {SlideData} itemData\r\n * @param {number} index\r\n */\r\nexport function getPanAreaSize(options, viewportSize, itemData, index) {\r\n  return {\r\n    x: viewportSize.x\r\n      - parsePaddingOption('left', options, viewportSize, itemData, index)\r\n      - parsePaddingOption('right', options, viewportSize, itemData, index),\r\n    y: viewportSize.y\r\n      - parsePaddingOption('top', options, viewportSize, itemData, index)\r\n      - parsePaddingOption('bottom', options, viewportSize, itemData, index)\r\n  };\r\n}\r\n","const MAX_IMAGE_WIDTH = 4000;\r\n\r\n/** @typedef {import(\"../photoswipe\").default} PhotoSwipe */\r\n/** @typedef {import(\"../photoswipe\").PhotoSwipeOptions} PhotoSwipeOptions */\r\n/** @typedef {import(\"../slide/slide\").SlideData} SlideData */\r\n\r\n/** @typedef {'fit' | 'fill' | number | ((zoomLevelObject: ZoomLevel) => number)} ZoomLevelOption */\r\n\r\n/**\r\n * Calculates zoom levels for specific slide.\r\n * Depends on viewport size and image size.\r\n */\r\nclass ZoomLevel {\r\n  /**\r\n   * @param {PhotoSwipeOptions} options PhotoSwipe options\r\n   * @param {SlideData} itemData Slide data\r\n   * @param {number} index Slide index\r\n   * @param {PhotoSwipe=} pswp PhotoSwipe instance, can be undefined if not initialized yet\r\n   */\r\n  constructor(options, itemData, index, pswp) {\r\n    this.pswp = pswp;\r\n    this.options = options;\r\n    this.itemData = itemData;\r\n    this.index = index;\r\n  }\r\n\r\n  /**\r\n   * Calculate initial, secondary and maximum zoom level for the specified slide.\r\n   *\r\n   * It should be called when either image or viewport size changes.\r\n   *\r\n   * @param {number} maxWidth\r\n   * @param {number} maxHeight\r\n   * @param {{ x?: number; y?: number }} panAreaSize\r\n   */\r\n  update(maxWidth, maxHeight, panAreaSize) {\r\n    this.elementSize = {\r\n      x: maxWidth,\r\n      y: maxHeight\r\n    };\r\n\r\n    this.panAreaSize = panAreaSize;\r\n\r\n    const hRatio = this.panAreaSize.x / this.elementSize.x;\r\n    const vRatio = this.panAreaSize.y / this.elementSize.y;\r\n\r\n    this.fit = Math.min(1, hRatio < vRatio ? hRatio : vRatio);\r\n    this.fill = Math.min(1, hRatio > vRatio ? hRatio : vRatio);\r\n\r\n    // zoom.vFill defines zoom level of the image\r\n    // when it has 100% of viewport vertical space (height)\r\n    this.vFill = Math.min(1, vRatio);\r\n\r\n    this.initial = this._getInitial();\r\n    this.secondary = this._getSecondary();\r\n    this.max = Math.max(\r\n      this.initial,\r\n      this.secondary,\r\n      this._getMax()\r\n    );\r\n\r\n    this.min = Math.min(\r\n      this.fit,\r\n      this.initial,\r\n      this.secondary\r\n    );\r\n\r\n    if (this.pswp) {\r\n      this.pswp.dispatch('zoomLevelsUpdate', { zoomLevels: this, slideData: this.itemData });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Parses user-defined zoom option.\r\n   *\r\n   * @private\r\n   * @param {'initial' | 'secondary' | 'max'} optionPrefix Zoom level option prefix (initial, secondary, max)\r\n   */\r\n  _parseZoomLevelOption(optionPrefix) {\r\n    // eslint-disable-next-line max-len\r\n    const optionName = /** @type {'initialZoomLevel' | 'secondaryZoomLevel' | 'maxZoomLevel'} */ (optionPrefix + 'ZoomLevel');\r\n    const optionValue = this.options[optionName];\r\n\r\n    if (!optionValue) {\r\n      return;\r\n    }\r\n\r\n    if (typeof optionValue === 'function') {\r\n      return optionValue(this);\r\n    }\r\n\r\n    if (optionValue === 'fill') {\r\n      return this.fill;\r\n    }\r\n\r\n    if (optionValue === 'fit') {\r\n      return this.fit;\r\n    }\r\n\r\n    return Number(optionValue);\r\n  }\r\n\r\n  /**\r\n   * Get zoom level to which image will be zoomed after double-tap gesture,\r\n   * or when user clicks on zoom icon,\r\n   * or mouse-click on image itself.\r\n   * If you return 1 image will be zoomed to its original size.\r\n   *\r\n   * @private\r\n   * @return {number}\r\n   */\r\n  _getSecondary() {\r\n    let currZoomLevel = this._parseZoomLevelOption('secondary');\r\n\r\n    if (currZoomLevel) {\r\n      return currZoomLevel;\r\n    }\r\n\r\n    // 3x of \"fit\" state, but not larger than original\r\n    currZoomLevel = Math.min(1, this.fit * 3);\r\n\r\n    if (currZoomLevel * this.elementSize.x > MAX_IMAGE_WIDTH) {\r\n      currZoomLevel = MAX_IMAGE_WIDTH / this.elementSize.x;\r\n    }\r\n\r\n    return currZoomLevel;\r\n  }\r\n\r\n  /**\r\n   * Get initial image zoom level.\r\n   *\r\n   * @private\r\n   * @return {number}\r\n   */\r\n  _getInitial() {\r\n    return this._parseZoomLevelOption('initial') || this.fit;\r\n  }\r\n\r\n  /**\r\n   * Maximum zoom level when user zooms\r\n   * via zoom/pinch gesture,\r\n   * via cmd/ctrl-wheel or via trackpad.\r\n   *\r\n   * @private\r\n   * @return {number}\r\n   */\r\n  _getMax() {\r\n    const currZoomLevel = this._parseZoomLevelOption('max');\r\n\r\n    if (currZoomLevel) {\r\n      return currZoomLevel;\r\n    }\r\n\r\n    // max zoom level is x4 from \"fit state\",\r\n    // used for zoom gesture and ctrl/trackpad zoom\r\n    return Math.max(1, this.fit * 4);\r\n  }\r\n}\r\n\r\nexport default ZoomLevel;\r\n","import { getViewportSize, getPanAreaSize } from '../util/viewport-size.js';\r\nimport ZoomLevel from './zoom-level.js';\r\n\r\n/** @typedef {import(\"./content\").default} Content */\r\n/** @typedef {import(\"./slide\").default} Slide */\r\n/** @typedef {import(\"./slide\").SlideData} SlideData */\r\n/** @typedef {import(\"../photoswipe\").default} PhotoSwipe */\r\n/** @typedef {import(\"../lightbox/lightbox\").default} PhotoSwipeLightbox */\r\n\r\nconst MIN_SLIDES_TO_CACHE = 5;\r\n\r\n/**\r\n * Lazy-load an image\r\n * This function is used both by Lightbox and PhotoSwipe core,\r\n * thus it can be called before dialog is opened.\r\n *\r\n * @param {SlideData} itemData Data about the slide\r\n * @param {PhotoSwipe | PhotoSwipeLightbox} instance PhotoSwipe or PhotoSwipeLightbox\r\n * @param {number} index\r\n * @returns Image that is being decoded or false.\r\n */\r\nexport function lazyLoadData(itemData, instance, index) {\r\n  // src/slide/content/content.js\r\n  const content = instance.createContentFromData(itemData, index);\r\n\r\n  if (!content || !content.lazyLoad) {\r\n    return;\r\n  }\r\n\r\n  const { options } = instance;\r\n\r\n  // We need to know dimensions of the image to preload it,\r\n  // as it might use srcset and we need to define sizes\r\n  // @ts-expect-error should provide pswp instance?\r\n  const viewportSize = instance.viewportSize || getViewportSize(options, instance);\r\n  const panAreaSize = getPanAreaSize(options, viewportSize, itemData, index);\r\n\r\n  const zoomLevel = new ZoomLevel(options, itemData, -1);\r\n  zoomLevel.update(content.width, content.height, panAreaSize);\r\n\r\n  content.lazyLoad();\r\n  content.setDisplayedSize(\r\n    Math.ceil(content.width * zoomLevel.initial),\r\n    Math.ceil(content.height * zoomLevel.initial)\r\n  );\r\n\r\n  return content;\r\n}\r\n\r\n\r\n/**\r\n * Lazy-loads specific slide.\r\n * This function is used both by Lightbox and PhotoSwipe core,\r\n * thus it can be called before dialog is opened.\r\n *\r\n * By default it loads image based on viewport size and initial zoom level.\r\n *\r\n * @param {number} index Slide index\r\n * @param {PhotoSwipe | PhotoSwipeLightbox} instance PhotoSwipe or PhotoSwipeLightbox eventable instance\r\n */\r\nexport function lazyLoadSlide(index, instance) {\r\n  const itemData = instance.getItemData(index);\r\n\r\n  if (instance.dispatch('lazyLoadSlide', { index, itemData }).defaultPrevented) {\r\n    return;\r\n  }\r\n\r\n  return lazyLoadData(itemData, instance, index);\r\n}\r\n\r\n\r\nclass ContentLoader {\r\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   */\r\n  constructor(pswp) {\r\n    this.pswp = pswp;\r\n    // Total amount of cached images\r\n    this.limit = Math.max(\r\n      pswp.options.preload[0] + pswp.options.preload[1] + 1,\r\n      MIN_SLIDES_TO_CACHE\r\n    );\r\n    /** @type {Content[]} */\r\n    this._cachedItems = [];\r\n  }\r\n\r\n  /**\r\n   * Lazy load nearby slides based on `preload` option.\r\n   *\r\n   * @param {number=} diff Difference between slide indexes that was changed recently, or 0.\r\n   */\r\n  updateLazy(diff) {\r\n    const { pswp } = this;\r\n\r\n    if (pswp.dispatch('lazyLoad').defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    const { preload } = pswp.options;\r\n    const isForward = diff === undefined ? true : (diff >= 0);\r\n    let i;\r\n\r\n    // preload[1] - num items to preload in forward direction\r\n    for (i = 0; i <= preload[1]; i++) {\r\n      this.loadSlideByIndex(pswp.currIndex + (isForward ? i : (-i)));\r\n    }\r\n\r\n    // preload[0] - num items to preload in backward direction\r\n    for (i = 1; i <= preload[0]; i++) {\r\n      this.loadSlideByIndex(pswp.currIndex + (isForward ? (-i) : i));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {number} index\r\n   */\r\n  loadSlideByIndex(index) {\r\n    index = this.pswp.getLoopedIndex(index);\r\n    // try to get cached content\r\n    let content = this.getContentByIndex(index);\r\n    if (!content) {\r\n      // no cached content, so try to load from scratch:\r\n      content = lazyLoadSlide(index, this.pswp);\r\n      // if content can be loaded, add it to cache:\r\n      if (content) {\r\n        this.addToCache(content);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Slide} slide\r\n   */\r\n  getContentBySlide(slide) {\r\n    let content = this.getContentByIndex(slide.index);\r\n    if (!content) {\r\n      // create content if not found in cache\r\n      content = this.pswp.createContentFromData(slide.data, slide.index);\r\n      if (content) {\r\n        this.addToCache(content);\r\n      }\r\n    }\r\n\r\n    if (content) {\r\n      // assign slide to content\r\n      content.setSlide(slide);\r\n    }\r\n    return content;\r\n  }\r\n\r\n  /**\r\n   * @param {Content} content\r\n   */\r\n  addToCache(content) {\r\n    // move to the end of array\r\n    this.removeByIndex(content.index);\r\n    this._cachedItems.push(content);\r\n\r\n    if (this._cachedItems.length > this.limit) {\r\n      // Destroy the first content that's not attached\r\n      const indexToRemove = this._cachedItems.findIndex((item) => {\r\n        return !item.isAttached && !item.hasSlide;\r\n      });\r\n      if (indexToRemove !== -1) {\r\n        const removedItem = this._cachedItems.splice(indexToRemove, 1)[0];\r\n        removedItem.destroy();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Removes an image from cache, does not destroy() it, just removes.\r\n   *\r\n   * @param {number} index\r\n   */\r\n  removeByIndex(index) {\r\n    const indexToRemove = this._cachedItems.findIndex(item => item.index === index);\r\n    if (indexToRemove !== -1) {\r\n      this._cachedItems.splice(indexToRemove, 1);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {number} index\r\n   */\r\n  getContentByIndex(index) {\r\n    return this._cachedItems.find(content => content.index === index);\r\n  }\r\n\r\n  destroy() {\r\n    this._cachedItems.forEach(content => content.destroy());\r\n    this._cachedItems = null;\r\n  }\r\n}\r\n\r\nexport default ContentLoader;\r\n","import {\r\n  specialKeyUsed,\r\n  getElementsFromOption,\r\n  isPswpClass\r\n} from '../util/util.js';\r\n\r\nimport PhotoSwipeBase from '../core/base.js';\r\nimport { lazyLoadSlide } from '../slide/loader.js';\r\n\r\n/**\r\n * @template T\r\n * @typedef {import(\"../types\").Type<T>} Type<T>\r\n */\r\n\r\n/** @typedef {import(\"../photoswipe\").default} PhotoSwipe */\r\n/** @typedef {import(\"../photoswipe\").PhotoSwipeOptions} PhotoSwipeOptions */\r\n/** @typedef {import(\"../photoswipe\").DataSource} DataSource */\r\n/** @typedef {import(\"../slide/content\").default} Content */\r\n/** @typedef {import(\"../core/eventable\").PhotoSwipeEventsMap} PhotoSwipeEventsMap */\r\n/** @typedef {import(\"../core/eventable\").PhotoSwipeFiltersMap} PhotoSwipeFiltersMap */\r\n\r\n/**\r\n * @template T\r\n * @typedef {import(\"../core/eventable\").EventCallback<T>} EventCallback<T>\r\n */\r\n\r\n/**\r\n * PhotoSwipe Lightbox\r\n *\r\n * - If user has unsupported browser it falls back to default browser action (just opens URL)\r\n * - Binds click event to links that should open PhotoSwipe\r\n * - parses DOM strcture for PhotoSwipe (retrieves large image URLs and sizes)\r\n * - Initializes PhotoSwipe\r\n *\r\n *\r\n * Loader options use the same object as PhotoSwipe, and supports such options:\r\n *\r\n * gallery - Element | Element[] | NodeList | string selector for the gallery element\r\n * children - Element | Element[] | NodeList | string selector for the gallery children\r\n *\r\n */\r\nclass PhotoSwipeLightbox extends PhotoSwipeBase {\r\n  /**\r\n   * @param {PhotoSwipeOptions} options\r\n   */\r\n  constructor(options) {\r\n    super();\r\n    /** @type {PhotoSwipeOptions} */\r\n    this.options = options || {};\r\n    this._uid = 0;\r\n  }\r\n\r\n  /**\r\n   * Initialize lightbox, should be called only once.\r\n   * It's not included in the main constructor, so you may bind events before it.\r\n   */\r\n  init() {\r\n    this.onThumbnailsClick = this.onThumbnailsClick.bind(this);\r\n\r\n    // Bind click events to each gallery\r\n    getElementsFromOption(this.options.gallery, this.options.gallerySelector)\r\n      .forEach((galleryElement) => {\r\n        galleryElement.addEventListener('click', this.onThumbnailsClick, false);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * @param {MouseEvent} e\r\n   */\r\n  onThumbnailsClick(e) {\r\n    // Exit and allow default browser action if:\r\n    if (specialKeyUsed(e) // ... if clicked with a special key (ctrl/cmd...)\r\n        || window.pswp // ... if PhotoSwipe is already open\r\n        || window.navigator.onLine === false) { // ... if offline\r\n      return;\r\n    }\r\n\r\n    // If both clientX and clientY are 0 or not defined,\r\n    // the event is likely triggered by keyboard,\r\n    // so we do not pass the initialPoint\r\n    //\r\n    // Note that some screen readers emulate the mouse position,\r\n    // so it's not ideal way to detect them.\r\n    //\r\n    let initialPoint = { x: e.clientX, y: e.clientY };\r\n\r\n    if (!initialPoint.x && !initialPoint.y) {\r\n      initialPoint = null;\r\n    }\r\n\r\n    let clickedIndex = this.getClickedIndex(e);\r\n    clickedIndex = this.applyFilters('clickedIndex', clickedIndex, e, this);\r\n    const dataSource = {\r\n      gallery: /** @type {HTMLElement} */ (e.currentTarget)\r\n    };\r\n\r\n    if (clickedIndex >= 0) {\r\n      e.preventDefault();\r\n      this.loadAndOpen(clickedIndex, dataSource, initialPoint);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get index of gallery item that was clicked.\r\n   *\r\n   * @param {MouseEvent} e click event\r\n   */\r\n  getClickedIndex(e) {\r\n    // legacy option\r\n    if (this.options.getClickedIndexFn) {\r\n      return this.options.getClickedIndexFn.call(this, e);\r\n    }\r\n\r\n    const clickedTarget = /** @type {HTMLElement} */ (e.target);\r\n    const childElements = getElementsFromOption(\r\n      this.options.children,\r\n      this.options.childSelector,\r\n      /** @type {HTMLElement} */ (e.currentTarget)\r\n    );\r\n    const clickedChildIndex = childElements.findIndex(\r\n      child => child === clickedTarget || child.contains(clickedTarget)\r\n    );\r\n\r\n    if (clickedChildIndex !== -1) {\r\n      return clickedChildIndex;\r\n    } else if (this.options.children || this.options.childSelector) {\r\n      // click wasn't on a child element\r\n      return -1;\r\n    }\r\n\r\n    // There is only one item (which is the gallery)\r\n    return 0;\r\n  }\r\n\r\n  /**\r\n   * Load and open PhotoSwipe\r\n   *\r\n   * @param {number} index\r\n   * @param {DataSource=} dataSource\r\n   * @param {{ x?: number; y?: number }} [initialPoint]\r\n   */\r\n  loadAndOpen(index, dataSource, initialPoint) {\r\n    // Check if the gallery is already open\r\n    if (window.pswp) {\r\n      return false;\r\n    }\r\n\r\n    // set initial index\r\n    this.options.index = index;\r\n\r\n    // define options for PhotoSwipe constructor\r\n    this.options.initialPointerPos = initialPoint;\r\n\r\n    this.shouldOpen = true;\r\n    this.preload(index, dataSource);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Load the main module and the slide content by index\r\n   *\r\n   * @param {number} index\r\n   * @param {DataSource=} dataSource\r\n   */\r\n  preload(index, dataSource) {\r\n    const { options } = this;\r\n\r\n    if (dataSource) {\r\n      options.dataSource = dataSource;\r\n    }\r\n\r\n    // Add the main module\r\n    /** @type {Promise<Type<PhotoSwipe>>[]} */\r\n    const promiseArray = [];\r\n\r\n    const pswpModuleType = typeof options.pswpModule;\r\n    if (isPswpClass(options.pswpModule)) {\r\n      promiseArray.push(Promise.resolve(/** @type {Type<PhotoSwipe>} */ (options.pswpModule)));\r\n    } else if (pswpModuleType === 'string') {\r\n      throw new Error('pswpModule as string is no longer supported');\r\n    } else if (pswpModuleType === 'function') {\r\n      promiseArray.push(/** @type {() => Promise<Type<PhotoSwipe>>} */ (options.pswpModule)());\r\n    } else {\r\n      throw new Error('pswpModule is not valid');\r\n    }\r\n\r\n    // Add custom-defined promise, if any\r\n    if (typeof options.openPromise === 'function') {\r\n      // allow developers to perform some task before opening\r\n      promiseArray.push(options.openPromise());\r\n    }\r\n\r\n    if (options.preloadFirstSlide !== false && index >= 0) {\r\n      this._preloadedContent = lazyLoadSlide(index, this);\r\n    }\r\n\r\n    // Wait till all promises resolve and open PhotoSwipe\r\n    const uid = ++this._uid;\r\n    Promise.all(promiseArray).then((iterableModules) => {\r\n      if (this.shouldOpen) {\r\n        const mainModule = iterableModules[0];\r\n        this._openPhotoswipe(mainModule, uid);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {Type<PhotoSwipe> | { default: Type<PhotoSwipe> }} module\r\n   * @param {number} uid\r\n   */\r\n  _openPhotoswipe(module, uid) {\r\n    // Cancel opening if UID doesn't match the current one\r\n    // (if user clicked on another gallery item before current was loaded).\r\n    //\r\n    // Or if shouldOpen flag is set to false\r\n    // (developer may modify it via public API)\r\n    if (uid !== this._uid && this.shouldOpen) {\r\n      return;\r\n    }\r\n\r\n    this.shouldOpen = false;\r\n\r\n    // PhotoSwipe is already open\r\n    if (window.pswp) {\r\n      return;\r\n    }\r\n\r\n    /**\r\n     * Pass data to PhotoSwipe and open init\r\n     *\r\n     * @type {PhotoSwipe}\r\n     */\r\n    const pswp = typeof module === 'object'\r\n        ? new module.default(this.options) // eslint-disable-line\r\n        : new module(this.options); // eslint-disable-line\r\n\r\n    this.pswp = pswp;\r\n    window.pswp = pswp;\r\n\r\n    // map listeners from Lightbox to PhotoSwipe Core\r\n    /** @type {(keyof PhotoSwipeEventsMap)[]} */\r\n    (Object.keys(this._listeners)).forEach((name) => {\r\n      this._listeners[name].forEach((fn) => {\r\n        pswp.on(name, /** @type {EventCallback<typeof name>} */(fn));\r\n      });\r\n    });\r\n\r\n    // same with filters\r\n    /** @type {(keyof PhotoSwipeFiltersMap)[]} */\r\n    (Object.keys(this._filters)).forEach((name) => {\r\n      this._filters[name].forEach((filter) => {\r\n        pswp.addFilter(name, filter.fn, filter.priority);\r\n      });\r\n    });\r\n\r\n    if (this._preloadedContent) {\r\n      pswp.contentLoader.addToCache(this._preloadedContent);\r\n      this._preloadedContent = null;\r\n    }\r\n\r\n    pswp.on('destroy', () => {\r\n      // clean up public variables\r\n      this.pswp = null;\r\n      window.pswp = null;\r\n    });\r\n\r\n    pswp.init();\r\n  }\r\n\r\n  /**\r\n   * Unbinds all events, closes PhotoSwipe if it's open.\r\n   */\r\n  destroy() {\r\n    if (this.pswp) {\r\n      this.pswp.destroy();\r\n    }\r\n\r\n    this.shouldOpen = false;\r\n    this._listeners = null;\r\n\r\n    getElementsFromOption(this.options.gallery, this.options.gallerySelector)\r\n      .forEach((galleryElement) => {\r\n        galleryElement.removeEventListener('click', this.onThumbnailsClick, false);\r\n      });\r\n  }\r\n}\r\n\r\nexport default PhotoSwipeLightbox;\r\n","import galleryEl from './gallery-items.js';\r\nimport PhotoSwipeLightbox from 'photoswipe/lightbox';\r\nimport 'photoswipe/style.css';\r\n\r\nconst refs = {\r\n  galleryList: document.querySelector('.js-gallery'),\r\n};\r\n\r\nconst newGallEl = galleryEl.reduce(\r\n  (acc, { preview, original, description }) => {\r\n    return (acc += `<li class=\"gallery__item\"><a class=\"gallery__link\" href=\"${original}\" data-pswp-width=\"3000\" data-pswp-height=\"1800\"  data-cropped=\"true\" target=\"_blank\"><img class=\"gallery__image\" src=\"${preview}\"alt=\"${description}\"/></a></li>\r\n`);\r\n  },\r\n  '',\r\n);\r\nrefs.galleryList.innerHTML = newGallEl;\r\n\r\nconst lightbox = new PhotoSwipeLightbox({\r\n  gallery: '#my-gallery',\r\n  children: 'a',\r\n  showHideAnimationType: 'zoom',\r\n  secondaryZoomLevel: 2,\r\n  pswpModule: () => import('photoswipe'),\r\n});\r\nlightbox.init();\r\n\r\nconsole.log(lightbox);\r\n"],"names":["_assertThisInitialized","self","ReferenceError","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_typeof","obj","Symbol","iterator","constructor","_possibleConstructorReturn","call","assertThisInitialized","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","valueOf","e","result","Super","NewTarget","this","arguments","apply","_setPrototypeOf","p","_inherits","subClass","superClass","create","value","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","d","definition","get","f","chunkId","Promise","all","keys","reduce","promises","u","miniCssF","prop","hasOwnProperty","inProgress","dataWebpackPrefix","l","url","done","push","script","needAttach","scripts","document","getElementsByTagName","s","getAttribute","createElement","charset","timeout","nc","setAttribute","src","onScriptComplete","prev","event","onerror","onload","clearTimeout","doneFns","parentNode","removeChild","forEach","fn","setTimeout","bind","type","head","appendChild","r","toStringTag","installedChunks","j","installedChunkData","promise","resolve","reject","error","Error","errorType","realSrc","message","name","request","webpackJsonpCallback","parentChunkLoadingFunction","data","chunkIds","moreModules","runtime","some","id","chunkLoadingGlobal","className","tagName","appendToEl","el","setWidthHeight","w","h","style","width","height","LOAD_STATE","getElementsFromOption","option","legacySelector","parent","elements","Element","NodeList","Array","isArray","from","selector","querySelectorAll","PhotoSwipeEvent","details","assign","defaultPrevented","Eventable","_listeners","_filters","pswp","options","priority","sort","f1","f2","addFilter","filter","removeFilter","args","on","listener","off","dispatch","Placeholder","imageSrc","container","element","decoding","alt","transformOrigin","transform","x","y","scale","propValue","toTransformString","remove","Content","itemData","index","Number","isAttached","hasSlide","state","content","placeholder","keepPlaceholder","destroy","isLazy","reload","slide","usePlaceholder","placeholderSrc","applyFilters","msrc","isFirstSlide","isImageContent","loadImage","innerHTML","html","updateContentSize","imageElement","srcset","complete","onLoaded","onError","isActive","heavyAppended","append","displayError","isError","setDisplayedSize","image","dataset","largestUsedSize","parseInt","sizes","String","load","isLoading","errorMsgEl","innerText","errorMsg","removePlaceholder","isDecoding","requestAnimationFrame","decode","then","appendImage","catch","PhotoSwipeBase","numItems","dataSource","items","_getGalleryDOMElements","gallery","slideData","dataSourceItem","_domElementToItemData","galleryElement","children","childSelector","linkEl","querySelector","pswpSrc","href","pswpSrcset","pswpWidth","pswpHeight","pswpType","thumbnailEl","currentSrc","pswpCropped","cropped","thumbCropped","parsePaddingOption","viewportSize","paddingValue","paddingFn","padding","legacyPropName","toUpperCase","slice","ZoomLevel","maxWidth","maxHeight","panAreaSize","elementSize","hRatio","vRatio","fit","Math","min","fill","vFill","initial","_getInitial","secondary","_getSecondary","max","_getMax","zoomLevels","optionPrefix","optionName","optionValue","currZoomLevel","_parseZoomLevelOption","lazyLoadData","createContentFromData","lazyLoad","getViewportSizeFn","newViewportSize","documentElement","clientWidth","window","innerHeight","getViewportSize","getPanAreaSize","zoomLevel","update","ceil","PhotoSwipeLightbox","_uid","onThumbnailsClick","gallerySelector","addEventListener","which","ctrlKey","metaKey","altKey","shiftKey","specialKeyUsed","navigator","onLine","initialPoint","clientX","clientY","clickedIndex","getClickedIndex","currentTarget","preventDefault","loadAndOpen","getClickedIndexFn","clickedTarget","clickedChildIndex","findIndex","child","contains","initialPointerPos","shouldOpen","preload","promiseArray","pswpModuleType","pswpModule","goTo","openPromise","preloadFirstSlide","_preloadedContent","getItemData","lazyLoadSlide","uid","iterableModules","mainModule","_openPhotoswipe","default","contentLoader","addToCache","init","removeEventListener","refs","galleryList","newGallEl","preview","original","description","galleryEl","acc","lightbox","showHideAnimationType","secondaryZoomLevel","console","log"],"sourceRoot":""}